// pages/index.jsx
import { useState } from "react";
import { useRouter } from "next/router";
import { supabase } from "../utils/supabaseClient";

export default function Login() {
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [error, setError] = useState(null);
  const [isRegister, setIsRegister] = useState(false);
  const router = useRouter();

  async function handleSubmit(e) {
    e.preventDefault();
    setError(null);

    if (isRegister) {
      const { data, error } = await supabase.auth.signUp({ email, password });
      if (error) return setError(error.message);

      await supabase
        .from("profiles")
        .insert([{ id: data.user?.id, email, role: "viewer", stream_id: null }])
        .throwOnError();

      alert("–ü—Ä–æ–≤–µ—Ä—å –ø–æ—á—Ç—É ‚Äî –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!");
      return;
    }

    // --- –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è ---
    const { data, error } = await supabase.auth.signInWithPassword({ email, password });
    if (error) return setError(error.message);

    // --- –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ---
    const { data: profile } = await supabase
      .from("profiles")
      .select("role, stream_id")
      .eq("id", data.user.id)
      .single();

    // --- –ï—Å–ª–∏ –∞–¥–º–∏–Ω ---
    if (profile?.role === "admin") {
      return router.push("/s/kbtusize/home"); // –º–æ–∂–µ—à—å —É–∫–∞–∑–∞—Ç—å –¥–µ—Ñ–æ–ª—Ç–Ω—ã–π –ø–æ—Ç–æ–∫ –∞–¥–º–∏–Ω–∞
    }

    // --- –ï—Å–ª–∏ –æ–±—ã—á–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ---
    if (profile?.stream_id) {
      const { data: stream } = await supabase
        .from("streams")
        .select("slug")
        .eq("id", profile.stream_id)
        .single();

      if (stream?.slug) return router.push(`/s/${stream.slug}/home`);
    }

    // –ï—Å–ª–∏ –Ω–µ—Ç –ø–æ—Ç–æ–∫–∞
    return router.push("/no-stream");
  }

  return (
    <div className="container">
      <h1 className="title">{isRegister ? "üìù –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è" : "üîê –í—Ö–æ–¥"}</h1>
      <form onSubmit={handleSubmit} className="login-form">
        <input
          type="email"
          placeholder="–¢–≤–æ—è –ø–æ—á—Ç–∞"
          value={email}
          onChange={(e) => setEmail(e.target.value)}
          required
        />
        <input
          type="password"
          placeholder="–ü–∞—Ä–æ–ª—å"
          value={password}
          onChange={(e) => setPassword(e.target.value)}
          required
        />
        <button type="submit" className="menu-btn">
          {isRegister ? "–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è" : "–í–æ–π—Ç–∏"}
        </button>
      </form>
      <button className="link-btn" onClick={() => setIsRegister(!isRegister)}>
        {isRegister ? "–£–∂–µ –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç? –í–æ–π—Ç–∏" : "–ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞? –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è"}
      </button>
      {error && <p className="error">{error}</p>}
    </div>
  );
}
